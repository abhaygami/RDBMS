#	Create following tables with necessary constraints

1. Stud_master (rollno, sem, div, name, area, city, dob, bgp, gender)

CREATE TABLE STUD_MASTER (
	ROLLNO INTEGER,
	SEM INTEGER,
	DIV CHAR(1) CHECK (DIV IN('A','B','C','D')),
	NAME VARCHAR(25),
	AREA VARCHAR(25),
	CITY VARCHAR(25) CHECK (CITY IN ('SURAT','BARODA','NAVSARI','VALSAD')),
	DOB DATE CHECK (DOB > '01-JAN-1990'),
	BGP VARCHAR(3) CHECK (BGP IN ('A+','A-','B+','B-','AB+','AB-','O+','O-')),
	GENDER VARCHAR(8) CHECK (GENDER IN ('MALE','FEMALE','OTHER')),
	PRIMARY KEY(ROLLNO,DIV)
);

2. Stud_marks(rollno, div, rdbms, micro, es,wd)

CREATE TABLE STUD_MARKS (
	ROLLNO INTEGER PRIMARY KEY,
	DIV CHAR(1),
	RDBMS INTEGER CHECK (RDBMS >= 1 AND RDBMS <= 100),
	MICRO INTEGER CHECK (MICRO >= 1 AND MICRO <= 100),
	ES INTEGER CHECK (ES >= 1 AND ES <= 100),
	WD INTEGER CHECK (WD >= 1 AND WD <= 100),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV) 
);

3. Activity (activity_id, act_name, act_date)

CREATE TABLE ACTIVITY (
	ACTIVITY_ID INTEGER PRIMARY KEY,
	ACT_NAME VARCHAR(20) UNIQUE,
	ACT_DATE DATE
);

4. Participant (rollno, div, activity_id, perf_grade)

CREATE TABLE PARTICIPANT (
	ROLLNO INTEGER,
	DIV CHAR(1),
	ACTIVITY_ID INTEGER,
	PERF_GRADE CHAR(1) CHECK (PERF_GRADE IN('A','B','C','D','E','F')),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITY
);

5. Fees (payment_id, day_ofpay, rollno, div, amount)

CREATE TABLE FEES (
	PAYMENT_ID INTEGER PRIMARY KEY,
	DAY_OFPAY DATE,
	ROLLNO INTEGER,
	DIV CHAR(1),
	AMOUNT INTEGER CHECK (AMOUNT >= 0),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV) 
);

6. Assignment (assigno, subject, assigndate, faculty)

CREATE TABLE ASSIGNMENT (
	ASSIGNNO INTEGER PRIMARY KEY,
	SUBJECT VARCHAR(20),
	ASSIGNDATE DATE,
	FACULTY VARCHAR(25)
);

7. Assign_Subm (assigno, rollno, sub_status, subdate, grade)

CREATE TABLE ASSIGN_SUBM (
	ASSIGNNO INTEGER,
	ROLLNO INTEGER,
    DIV CHAR(1),
	SUB_STATUS VARCHAR(5) CHECK (SUB_STATUS IN ('TRUE','FALSE')),
	SUBDATE DATE,
	GRADE CHAR(1) CHECK (GRADE IN ('A','B','C','D','E')),
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (ASSIGNNO) REFERENCES ASSIGNMENT
);

8. Book (bookid, bookname, author, price)

CREATE TABLE BOOK (
	BOOKID INTEGER PRIMARY KEY,
	BOOKNAME VARCHAR(50),
	AUTHOR VARCHAR(25),
	PRICE INTEGER CHECK (PRICE >= 0)
);

9. BookIssueReturn (bookid, rollno, status(issue/return), irdate)

CREATE TABLE BOOKISSUERETUIRN (
	BOOKID INTEGER,
	ROLLNO INTEGER,
	DIV CHAR(1),
	STATUS VARCHAR(7) CHECK (STATUS IN ('ISSUE','RETURN')),
	IRDATE DATE,
	FOREIGN KEY (ROLLNO,DIV) REFERENCES STUD_MASTER(ROLLNO,DIV),
	FOREIGN KEY (BOOKID) REFERENCES BOOK(BOOKID)
);


//	Inserting records :

1. STUD_MASTER

INSERT ALL 
INTO STUD_MASTER VALUES(1, 1, 'A', 'ABHAY', 'CITYLIGHT', 'SURAT', '01-MAY-2000', 'A+', 'MALE')
INTO STUD_MASTER VALUES(2, 1, 'B', 'NEEL', 'CITYLIGHT', 'SURAT', '15-JUL-1997', 'B+', 'MALE')
INTO STUD_MASTER VALUES(3, 2, 'C', 'TEESA', 'CITYLIGHT', 'SURAT', '20-MAR-2001', 'A-', 'FEMALE')
INTO STUD_MASTER VALUES(4, 2, 'D', 'HONEYU', 'DOWNTOWN', 'VALSAD', '30-OCT-2000', 'O+', 'FEMALE')
INTO STUD_MASTER VALUES(5, 3, 'A', 'ARSHEET', 'CITYLIGHT', 'BARODA', '11-DEC-2000', 'AB-', 'MALE')
INTO STUD_MASTER VALUES(6, 3, 'B', 'VAIBHAV', 'OLDCITY', 'NAVSARI', '22-APR-1998', 'B+', 'MALE')
INTO STUD_MASTER VALUES(7, 4, 'C', 'RAHUL', 'DOWNTOWN', 'VALSAD', '18-SEP-1999', 'A+', 'MALE')
INTO STUD_MASTER VALUES(8, 4, 'D', 'MAHEK', 'NEWCITY', 'SURAT', '25-JAN-2000', 'O-', 'FEMALE')
INTO STUD_MASTER VALUES(9, 1, 'A', 'TARIQ', 'OLDCITY', 'SURAT', '10-NOV-2001', 'AB-', 'MALE')
INTO STUD_MASTER VALUES(10, 1, 'B', 'SARA', 'CITYLIGHT', 'BARODA', '04-JUN-2000', 'A-', 'FEMALE')
INTO STUD_MASTER VALUES(11, 2, 'C', 'PARTH', 'CITYLIGHT', 'SURAT', '25-JAN-2001', 'O+', 'MALE')
INTO STUD_MASTER VALUES(12, 3, 'A', 'PRIYA', 'CITYLIGHT', 'SURAT', '15-AUG-2001', 'B-', 'FEMALE')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM STUD_MASTER;

	ROLLNO	SEM	DIV	NAME	AREA		CITY	DOB			BGP	GENDER
	-------------------------------------------------------------------
	1		1	A	ABHAY	CITYLIGHT	SURAT	01-MAY-00	A+	MALE
	2		1	B	NEEL	CITYLIGHT	SURAT	15-JUL-97	B+	MALE
	3		2	C	TEESA	CITYLIGHT	SURAT	20-MAR-01	A-	FEMALE
	4		2	D	HONEYU	DOWNTOWN	VALSAD	30-OCT-00	O+	FEMALE
	5		3	A	ARSHEET	CITYLIGHT	BARODA	11-DEC-00	AB-	MALE
	6		3	B	VAIBHAV	OLDCITY		NAVSARI	22-APR-98	B+	MALE
	7		4	C	RAHUL	DOWNTOWN	VALSAD	18-SEP-99	A+	MALE
	8		4	D	MAHEK	NEWCITY		SURAT	25-JAN-00	O-	FEMALE
	9		1	A	TARIQ	OLDCITY		SURAT	10-NOV-01	AB-	MALE
	10		1	B	SARA	CITYLIGHT	BARODA	04-JUN-00	A-	FEMALE
	11		2	C	PARTH	CITYLIGHT	SURAT	25-JAN-01	O+	MALE
	12		3	A	PRIYA	CITYLIGHT	SURAT	15-AUG-01	B-	FEMALE

2. STUD_MARKS

INSERT ALL 
INTO STUD_MARKS VALUES(1, 'A', 85, 90, 75, 80)
INTO STUD_MARKS VALUES(2, 'B', 92, 88, 80, 75)
INTO STUD_MARKS VALUES(3, 'C', 85, 72, 60, 85)
INTO STUD_MARKS VALUES(4, 'D', 95, 90, 85, 65)
INTO STUD_MARKS VALUES(5, 'A', 80, 85, 80, 88)
INTO STUD_MARKS VALUES(6, 'B', 88, 76, 75, 70)
INTO STUD_MARKS VALUES(7, 'C', 90, 92, 85, 80)
INTO STUD_MARKS VALUES(8, 'D', 70, 65, 65, 75)
INTO STUD_MARKS VALUES(9, 'A', 85, 90, 70, 60)
INTO STUD_MARKS VALUES(10, 'B', 80, 85, 65, 90)
INTO STUD_MARKS VALUES(11, 'C', 72, 74, 68, 80)
INTO STUD_MARKS VALUES(12, 'A', 60, 50, 72, 78)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM STUD_MARKS;

	ROLLNO	DIV	RDBMS	MICRO	ES	WD
	----------------------------------
	1		A	85		90		75	80
	2		B	92		88		80	75
	3		C	85		72		60	85
	4		D	95		90		85	65
	5		A	80		85		80	88
	6		B	88		76		75	70
	7		C	90		92		85	80
	8		D	70		65		65	75
	9		A	85		90		70	60
	10		B	80		85		65	90
	11		C	72		74		68	80
	12		A	60		50		72	78

3. ACTIVITY

INSERT ALL 
INTO ACTIVITY VALUES(1, 'POSTER COMPETITION', '01-MAR-2016')
INTO ACTIVITY VALUES(2, 'DANCE', '25-FEB-2025')
INTO ACTIVITY VALUES(3, 'SPORTS', '28-FEB-2025')
INTO ACTIVITY VALUES(4, 'SINGING', '10-MAR-2025')
INTO ACTIVITY VALUES(5, 'QUIZ', '20-FEB-2025')
INTO ACTIVITY VALUES(6, 'ART', '01-APR-2025')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ACTIVITY;

	ACTIVITY_ID	ACT_NAME			ACT_DATE
	-----------------------------------------
	1			POSTER COMPETITION	01-MAR-16
	2			DANCE				25-FEB-25
	3			SPORTS				28-FEB-25
	4			SINGING				10-MAR-25
	5			QUIZ				20-FEB-25
	6			ART					01-APR-25

4. PARTICIPANT

INSERT ALL 
INTO PARTICIPANT VALUES(1, 'A', 1, 'A')
INTO PARTICIPANT VALUES(2, 'B', 2, 'B')
INTO PARTICIPANT VALUES(3, 'C', 3, 'C')
INTO PARTICIPANT VALUES(3, 'C', 2, 'A')
INTO PARTICIPANT VALUES(4, 'D', 4, 'B')
INTO PARTICIPANT VALUES(5, 'A', 2, 'A')
INTO PARTICIPANT VALUES(6, 'B', 3, 'C')
INTO PARTICIPANT VALUES(7, 'C', 5, 'B')
INTO PARTICIPANT VALUES(8, 'D', 1, 'A')
INTO PARTICIPANT VALUES(9, 'A', 4, 'A')
INTO PARTICIPANT VALUES(10, 'B', 5, 'B')
INTO PARTICIPANT VALUES(11, 'C', 6, 'B')
INTO PARTICIPANT VALUES(12, 'A', 6, 'A')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM PARTICIPANT;

	ROLLNO	DIV	ACTIVITY_ID	PERF_GRADE
	----------------------------------
	1		A	1			A
	2		B	2			B
	3		C	3			C
	3		C	2			A
	4		D	4			B
	5		A	2			A
	6		B	3			C
	7		C	5			B
	8		D	1			A
	9		A	4			A
	10		B	5			B
	11		C	6			B
	12		A	6			A

5. FEES

INSERT ALL 
INTO FEES VALUES(1, '10-DEC-2022', 1, 'A', 1500)
INTO FEES VALUES(2, '05-JAN-2023', 2, 'B', 1600)
INTO FEES VALUES(3, '15-MAR-2023', 3, 'C', 1400)
INTO FEES VALUES(4, '20-JUN-2023', 4, 'D', 1500)
INTO FEES VALUES(5, '10-MAY-2023', 5, 'A', 1550)
INTO FEES VALUES(6, '15-NOV-2022', 6, 'B', 1450)
INTO FEES VALUES(7, '28-FEB-2023', 7, 'C', 1500)
INTO FEES VALUES(8, '10-APR-2023', 8, 'D', 1600)
INTO FEES VALUES(9, '25-JAN-2023', 9, 'A', 1700)
INTO FEES VALUES(10, '12-MAR-2023', 10, 'B', 1650)
INTO FEES VALUES(11, NULL, 11, 'C', 0)
INTO FEES VALUES(12, NULL, 12, 'A', 0)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM FEES;

	PAYMENT_ID	DAY_OFPAY	ROLLNO	DIV	AMOUNT
	------------------------------------------
	1			10-DEC-22	1		A	1500
	2			05-JAN-23	2		B	1600
	3			15-MAR-23	3		C	1400
	4			20-JUN-23	4		D	1500
	5			10-MAY-23	5		A	1550
	6			15-NOV-22	6		B	1450
	7			28-FEB-23	7		C	1500
	8			10-APR-23	8		D	1600
	9			25-JAN-23	9		A	1700
	10			12-MAR-23	10		B	1650
	11				-		11		C	0
	12				-		12		A	0

6. ASSIGNMENT

INSERT ALL 
INTO ASSIGNMENT VALUES(1, 'RDBMS', '01-FEB-2023', 'PROF. SHARMA')
INTO ASSIGNMENT VALUES(2, 'MICRO', '15-FEB-2023', 'DR. PATEL')
INTO ASSIGNMENT VALUES(3, 'ES', '10-JAN-2023', 'PROF. KUMAR')
INTO ASSIGNMENT VALUES(4, 'WD', '05-MAR-2023', 'DR. MEHTA')
INTO ASSIGNMENT VALUES(5, 'DS', '05-APR-2023', 'DR. SHAH')
INTO ASSIGNMENT VALUES(6, 'IOT', '21-FEB-2023', 'DR. LAD')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ASSIGNMENT;

	ASSIGNNO	SUBJECT	ASSIGNDATE	FACULTY
	---------------------------------------------
	1			RDBMS	01-FEB-23	PROF. SHARMA
	2			MICRO	15-FEB-23	DR. PATEL
	3			ES		10-JAN-23	PROF. KUMAR
	4			WD		05-MAR-23	DR. MEHTA
	5			DS		05-APR-23	DR. SHAH
	6			IOT		21-FEB-23	DR. LAD

7. ASSIGN_SUBM

INSERT ALL 
INTO ASSIGN_SUBM VALUES(1, 1, 'A', 'TRUE', '03-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(2, 2, 'B', 'TRUE', '16-FEB-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 3, 'C', 'FALSE', NULL, NULL)
INTO ASSIGN_SUBM VALUES(4, 4, 'D', 'TRUE', '07-MAR-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 5, 'A', 'TRUE', '05-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(1, 6, 'B', 'FALSE', NULL, NULL)
INTO ASSIGN_SUBM VALUES(3, 7, 'C', 'TRUE', '12-JAN-2023', 'A')
INTO ASSIGN_SUBM VALUES(4, 8, 'D', 'TRUE', '08-MAR-2023', 'B')
INTO ASSIGN_SUBM VALUES(1, 9, 'A', 'TRUE', '02-FEB-2023', 'A')
INTO ASSIGN_SUBM VALUES(2, 10, 'B', 'TRUE', '18-FEB-2023', 'B')
INTO ASSIGN_SUBM VALUES(3, 11, 'C', 'FALSE', NULL, NULL)
INTO ASSIGN_SUBM VALUES(4, 12, 'A', 'TRUE', '22-FEB-2023', 'A')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM ASSIGN_SUBM;

	ASSIGNNO	ROLLNO	DIV	SUB_STATUS	SUBDATE		GRADE
	-----------------------------------------------------
	1			1		A	TRUE		03-FEB-23	A
	2			2		B	TRUE		16-FEB-23	B
	1			3		C	FALSE			-		-
	4			4		D	TRUE		07-MAR-23	B
	1			5		A	TRUE		05-FEB-23	A
	1			6		B	FALSE			-		-
	3			7		C	TRUE		12-JAN-23	A
	4			8		D	TRUE		08-MAR-23	B
	1			9		A	TRUE		02-FEB-23	A
	2			10		B	TRUE		18-FEB-23	B
	3			11		C	FALSE			-		-
	4			12		A	TRUE		22-FEB-23	A

8. BOOK

INSERT ALL 
INTO BOOK VALUES(1, 'DATABASE SYSTEMS', 'ELMASRI', 500)
INTO BOOK VALUES(2, 'DATA STRUCTURES', 'TANENBAUM', 400)
INTO BOOK VALUES(3, 'OPERATING SYSTEMS', 'SILBERSCHATZ', 550)
INTO BOOK VALUES(4, 'INTRODUCTION TO ALGORITHMS', 'CORMEN', 600)
INTO BOOK VALUES(5, 'COMPUTER NETWORKS', 'KUROSE', 650)
INTO BOOK VALUES(6, 'BUSINESS COMMUNICATION', 'ABHAY', 50)
INTO BOOK VALUES(7, 'OOP', 'BALA', 950)
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM BOOK;

	BOOKID	BOOKNAME					AUTHOR			PRICE
	---------------------------------------------------------
	1		DATABASE SYSTEMS			ELMASRI			500
	2		DATA STRUCTURES				TANENBAUM		400
	3		OPERATING SYSTEMS			SILBERSCHATZ	550
	4		INTRODUCTION TO ALGORITHMS	CORMEN			600
	5		COMPUTER NETWORKS			KUROSE			650
	6		BUSINESS COMMUNICATION		ABHAY			50
	7		OOP							BALA			950

9. BOOKISSUERETUIRN

INSERT ALL 
INTO BOOKISSUERETUIRN VALUES(1, 1, 'A', 'ISSUE', '10-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(2, 2, 'B', 'ISSUE', '12-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(1, 3, 'C', 'ISSUE', '05-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(4, 4, 'D', 'RETURN', '08-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(1, 5, 'A', 'ISSUE', '25-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(1, 6, 'B', 'ISSUE', '18-JAN-2023')
INTO BOOKISSUERETUIRN VALUES(2, 7, 'C', 'RETURN', '20-FEB-2023')
INTO BOOKISSUERETUIRN VALUES(3, 8, 'D', 'ISSUE', '02-MAR-2023')
INTO BOOKISSUERETUIRN VALUES(4, 9, 'A', 'RETURN', '12-JAN-2023')
INTO BOOKISSUERETUIRN VALUES(5, 10, 'B', 'ISSUE', '18-FEB-2023')
SELECT * FROM DUAL;

#	VALUES	#

SELECT * FROM BOOKISSUERETUIRN;

	BOOKID	ROLLNO	DIV	STATUS	IRDATE
	-------------------------------------
	1		1		A	ISSUE	10-FEB-23
	2		2		B	ISSUE	12-FEB-23
	1		3		C	ISSUE	05-MAR-23
	4		4		D	RETURN	08-MAR-23
	1		5		A	ISSUE	25-FEB-23
	1		6		B	ISSUE	18-JAN-23
	2		7		C	RETURN	20-FEB-23
	3		8		D	ISSUE	02-MAR-23
	4		9		A	RETURN	12-JAN-23
	5		10		B	ISSUE	18-FEB-23


		#		QUERIES		#


-1. Add 2-3 required columns with alter table command

=>
ALTER TABLE BOOK 
ADD RELEASEDATE DATE ;

ALTER TABLE BOOK
ADD LANGUAGE VARCHAR(25);

ALTER TABLE BOOK
ADD EDITION INTEGER;

-2. Update the value in respective columns of the tables.

=>
UPDATE BOOK
SET RELEASEDATE = '24-AUG-2010'
WHERE RELEASEDATE IS NULL; 

UPDATE BOOK
SET LANGUAGE = 'ENGLISH'
WHERE LANGUAGE IS NULL;

UPDATE BOOK
SET EDITION = 4
WHERE EDITION IS NULL;

BOOKID	BOOKNAME					AUTHOR			PRICE	RELEASEDATE	LANGUAGE	EDITION
-------------------------------------------------------------------------------------------
1		DATABASE SYSTEMS			ELMASRI			500		24-AUG-10	ENGLISH		4
2		DATA STRUCTURES				TANENBAUM		400		24-AUG-10	ENGLISH		4
3		OPERATING SYSTEMS			SILBERSCHATZ	550		24-AUG-10	ENGLISH		4
4		INTRODUCTION TO ALGORITHMS	CORMEN			600		24-AUG-10	ENGLISH		4
5		COMPUTER NETWORKS			KUROSE			650		24-AUG-10	ENGLISH		4


3. List the students who lives in citylight area of surat city

=>
SELECT *
FROM STUD_MASTER
WHERE AREA = 'CITYLIGHT' AND CITY = 'SURAT';

OUTPUT :

	ROLLNO	SEM	DIV	NAME	AREA		CITY	DOB			BGP	GENDER
	-------------------------------------------------------------------
	1		1	A	ABHAY	CITYLIGHT	SURAT	01-MAY-00	A+	MALE
	2		1	B	NEEL	CITYLIGHT	SURAT	15-JUL-97	B+	MALE
	3		2	C	TEESA	CITYLIGHT	SURAT	20-MAR-01	A-	FEMALE
	11		2	C	PARTH	CITYLIGHT	SURAT	25-JAN-01	O+	MALE
	12		3	A	PRIYA	CITYLIGHT	SURAT	15-AUG-01	B-	FEMALE

4. Display the detail of the female students whose name start with letter 'p'

=>
SELECT *
FROM STUD_MASTER
WHERE GENDER = 'FEMALE' AND NAME LIKE 'P%';

OUTPUT :

	ROLLNO	SEM	DIV	NAME	AREA		CITY	DOB			BGP	GENDER
	-------------------------------------------------------------------
	12		3	A	PRIYA	CITYLIGHT	SURAT	15-AUG-01	B-	FEMALE

5. List the students having more than 70 marks in rdbms and micro subject

=>
SELECT S.ROLLNO , NAME , RDBMS , MICRO
FROM STUD_MASTER S , STUD_MARKS M
WHERE S.ROLLNO = M.ROLLNO AND RDBMS >= 70 AND MICRO >= 70;

OUTPUT :

	ROLLNO	NAME	RDBMS	MICRO
	------------------------------
	1		ABHAY	85		90
	2		NEEL	92		88
	3		TEESA	78		72
	4		HONEYU	95		90
	5		ARSHEET	80		85
	6		VAIBHAV	88		76
	7		RAHUL	90		92
	9		TARIQ	85		90
	10		SARA	80		85
	11		PARTH	72		74

6. Display the detail of the students who live in surat or whose blood groupis a+ve

=>
SELECT ROLLNO , NAME , BGP , CITY
FROM STUD_MASTER
WHERE BGP = 'A+' OR CITY = 'SURAT';

OUTPUT :

	ROLLNO	NAME	BGP	CITY
	-------------------------
	1		ABHAY	A+	SURAT
	2		NEEL	B+	SURAT
	3		TEESA	A-	SURAT
	7		RAHUL	A+	VALSAD
	8		MAHEK	O-	SURAT
	9		TARIQ	AB-	SURAT
	11		PARTH	O+	SURAT
	12		PRIYA	B-	SURAT

7. Display the detail of the students who paid the fees after 1-jan-2016 andparticipated in the poster competition.

=>
SELECT S.ROLLNO , NAME , DAY_OFPAY , ACT_NAME
FROM STUD_MASTER S , FEES F , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = F.ROLLNO AND F.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND DAY_OFPAY >= '01-JAN-2016' AND ACT_NAME = 'POSTER COMPETITION';

OUTPUT :

	ROLLNO	NAME	DAY_OFPAY	ACT_NAME
	----------------------------------------------
	1		ABHAY	10-DEC-22	POSTER COMPETITION
	8		MAHEK	10-APR-23	POSTER COMPETITION

8. List activity details of the activity to be held on 1st march 2016

=>
SELECT *
FROM ACTIVITY
WHERE ACT_DATE = '01-MAR-2016';

OUTPUT :

	ACTIVITY_ID	ACT_NAME			ACT_DATE
	------------------------------------------
	1			POSTER COMPETITION	01-MAR-16

9. List the students in ascending order of their names

=>
SELECT ROLLNO , NAME
FROM STUD_MASTER
ORDER BY NAME;

OUTPUT :

	ROLLNO	NAME
	---------------
	1		ABHAY
	5		ARSHEET
	4		HONEYU
	8		MAHEK
	2		NEEL
	11		PARTH
	12		PRIYA
	7		RAHUL
	10		SARA
	9		TARIQ
	3		TEESA
	6		VAIBHAV

10.List the b division students whose names are starting from 's'

=>
SELECT ROLLNO , NAME , DIV
FROM STUD_MASTER
WHERE NAME LIKE 'S%' AND DIV = 'B';

OUTPUT :

	ROLLNO	NAME	DIV
	---------------------
	10		SARA	B

11.List the average marks of any 2 subjects

=>
SELECT ROUND(AVG(RDBMS),1) AS AVERAGEOFRDBMS , ROUND(AVG(MICRO),1) AS AVERAGEOFMICRO
FROM STUD_MARKS;

OUTPUT :

    AVERAGEOFRDBMS	AVERAGEOFMICRO
	------------------------------
	81.8			79.8

12.Display student detail having highest marks in rdbms subject

=>
SELECT S.ROLLNO , NAME , RDBMS
FROM STUD_MASTER S , STUD_MARKS M
WHERE S.ROLLNO = M.ROLLNO AND RDBMS = (SELECT MAX(RDBMS) FROM STUD_MARKS);

OUTPUT :

    ROLLNO	NAME	RDBMS
	----------------------
    4	    HONEYU	95

13.List student details of the students participated in dance

=>
SELECT S.ROLLNO , NAME , ACT_NAME
FROM STUD_MASTER S , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND A.ACT_NAME = 'DANCE';

OUTPUT :

    ROLLNO	NAME	ACT_NAME
	------------------------
    2	    NEEL	DANCE
    3	    TEESA	DANCE
    5	    ARSHEET	DANCE

14.List the student detail who have not paid the fees

=>
SELECT S.ROLLNO , NAME , DAY_OFPAY , AMOUNT
FROM STUD_MASTER S , FEES F
WHERE S.ROLLNO = F.ROLLNO AND (DAY_OFPAY IS NULL OR AMOUNT = 0);

OUTPUT :

    ROLLNO	NAME	DAY_OFPAY	AMOUNT
	----------------------------------
    11	    PARTH	    -   	0
    12	    PRIYA	    -	    0

-15.Drop the column bgp from the stud_master table

=>
ALTER TABLE STUD_MASTER
DROP COLUMN BGP;

16.Display records of students who have received 'A' grade in any activity

=>
SELECT S.ROLLNO , NAME , ACT_NAME , PERF_GRADE
FROM STUD_MASTER S , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND PERF_GRADE = 'A';

OUTPUT :

	ROLLNO	NAME	ACT_NAME			PERF_GRADE
	-----------------------------------------------
	1		ABHAY	POSTER COMPETITION	A
	3		TEESA	DANCE				A
	5		ARSHEET	DANCE				A
	8		MAHEK	POSTER COMPETITION	A
	9		TARIQ	SINGING				A
	12		PRIYA	ART					A

17.List out female students from surat who have participated in sport activityand dance as well

=>
SELECT S.ROLLNO , NAME , GENDER 
FROM STUD_MASTER S , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND CITY = 'SURAT' AND GENDER = 'FEMALE' AND ACT_NAME IN ('DANCE' , 'SPORTS')
GROUP BY S.ROLLNO , NAME , GENDER
HAVING COUNT(DISTINCT ACT_NAME) = 2;

OUTPUT :

	ROLLNO	NAME	GENDER
	-----------------------
	3		TEESA	FEMALE

18.Display total number of boys participated in sports activity

=>
SELECT COUNT(*) AS TOTALBOYSINSPORTS
FROM STUD_MASTER S , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND GENDER = 'MALE' AND ACT_NAME = 'SPORTS';

OUTPUT :

	TOTALBOYSINSPORTS
	-----------------
	1       			(//VAIBHAV)

19. List student detail who have secured more than 70 marks in rdbms andreceived 'A' grade in Song activity

=>
SELECT S.ROLLNO , NAME , RDBMS , ACT_NAME , PERF_GRADE
FROM STUD_MASTER S , STUD_MARKS M , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = M.ROLLNO AND S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND RDBMS >= 70 AND PERF_GRADE = 'A' AND ACT_NAME = 'SINGING';

OUTPUT :

	ROLLNO	NAME	RDBMS	ACT_NAME	PERF_GRADE
	-----------------------------------------------
	9		TARIQ	85		SINGING		A

20.Display student detail who have received more than 80 marks in ES andsecured 'B' grade in 'Singing' activity

=>
SELECT S.ROLLNO , NAME , ES , ACT_NAME , PERF_GRADE
FROM STUD_MASTER S , STUD_MARKS M , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = M.ROLLNO AND S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND ES >= 80 AND PERF_GRADE = 'B' AND ACT_NAME = 'SINGING';

OUTPUT :

	ROLLNO	NAME	ES	ACT_NAME	PERF_GRADE
	------------------------------------------
	4		HONEYU	85	SINGING		B

-21.Use alter table command to add few columns in all the tables

=>
ALTER TABLE STUD_MASTER
ADD BGP VARCHAR(3) CHECK(BGP IN ('A+','B+','O+','AB+','A-','B-','O-','AB-'));

ALTER TABLE STUD_MARKS
ADD C INTEGER CHECK (C BETWEEN 0 AND 100);

ALTER TABLE ACTIVITY 
ADD DURATION INTEGER CHECK(DURATION >= 0);

ALTER TABLE PARTICIPANT
ADD TYPE VARCHAR(25);

ALTER TABLE FEES 
ADD METHOD VARCHAR(25);

ALTER TABLE ASSIGNMENT
ADD MARKS INTEGER CHECK(MARKS > 0);

ALTER TABLE ASSIGN_SUBM
ADD DUEDATE DATE;

ALTER TABLE BOOK
ADD RATINGS INTEGER;

ALTER TABLE BOOKISSUERETUIRN 
ADD CHARGE INTEGER;

22. List the student detail who have submitted the assignment of 'rdbms'subject

=>
SELECT S.ROLLNO , NAME , SUB_STATUS , SUBJECT
FROM STUD_MASTER S , ASSIGNMENT A , ASSIGN_SUBM ASM
WHERE S.ROLLNO = ASM.ROLLNO AND ASM.ASSIGNNO = A.ASSIGNNO AND SUBJECT  = 'RDBMS' AND SUB_STATUS = 'TRUE'; 

OUTPUT :

	ROLLNO	NAME	SUB_STATUS	SUBJECT
	-----------------------------------
	1		ABHAY	TRUE		RDBMS
	5		ARSHEET	TRUE		RDBMS
	9		TARIQ	TRUE		RDBMS

23.List total assignment of each subject

=>
SELECT SUBJECT , COUNT(*) AS TOTALASSIGNMENT
FROM ASSIGNMENT A , ASSIGN_SUBM ASM
WHERE A.ASSIGNNO = ASM.ASSIGNNO 
GROUP BY SUBJECT;

OUTPUT :

	SUBJECT	TOTALASSIGNMENT
	-----------------------
	ES		2
	WD		3
	RDBMS	5
	MICRO	2

24. List Assignment detail for which assignment status is 'NotSubmitted'

=>
SELECT S.ROLLNO , NAME , SUBJECT , SUB_STATUS
FROM STUD_MASTER S , ASSIGN_SUBM ASM , ASSIGNMENT A 
WHERE S.ROLLNO = ASM.ROLLNO AND ASM.ASSIGNNO = A.ASSIGNNO AND SUB_STATUS = 'FALSE';

OUTPUT :

	ROLLNO	NAME	SUBJECT	SUB_STATUS
	----------------------------------
	3		TEESA	ES		FALSE
	6		VAIBHAV	MICRO	FALSE
	11		PARTH	ES		FALSE

25. List students who have not submitted the assignment but participated in 'sports' activity

=>
SELECT S.ROLLNO , NAME , SUB_STATUS , ACT_NAME 
FROM STUD_MASTER S , ASSIGN_SUBM ASM , PARTICIPANT P , ACTIVITY A 
WHERE S.ROLLNO = ASM.ROLLNO AND S.ROLLNO = P.ROLLNO AND A.ACTIVITY_ID = P.ACTIVITY_ID AND SUB_STATUS = 'FALSE' AND ACT_NAME = 'SPORTS';


OUTPUT :

	ROLLNO	NAME	SUB_STATUS	ACT_NAME
	------------------------------------
	3		TEESA	FALSE		SPORTS
	6		VAIBHAV	FALSE		SPORTS

26.List student detail who have issued book of DBMS and secured morethan 80 marks in RDBMS and participated in dance activity

=>
SELECT S.ROLLNO , NAME , BOOKNAME , RDBMS , ACT_NAME
FROM STUD_MASTER S , STUD_MARKS M , BOOKISSUERETUIRN BI , BOOK B , PARTICIPANT P , ACTIVITY A
WHERE S.ROLLNO = M.ROLLNO AND S.ROLLNO = BI.ROLLNO AND S.ROLLNO = P.ROLLNO AND P.ACTIVITY_ID = A.ACTIVITY_ID AND B.BOOKID = BI.BOOKID AND BOOKNAME = 'DATABASE SYSTEMS' AND RDBMS >= 80 AND ACT_NAME = 'DANCE';

OUTPUT

	ROLLNO	NAME	BOOKNAME			RDBMS	ACT_NAME
	----------------------------------------------------
	3		TEESA	DATABASE SYSTEMS	85		DANCE
	5		ARSHEET	DATABASE SYSTEMS	80		DANCE

27.Count total number of books issued

=>
SELECT COUNT(*) AS TOTALBOOKS
FROM BOOKISSUERETUIRN
WHERE STATUS = 'ISSUE';

OUTPUT :

	TOTALBOOKS
	----------
		7

28.Display student detail who have issued book of more than 500 rs. and notsubmitted RDBMS assignment

=>
SELECT S.ROLLNO , NAME , SUBJECT , SUB_STATUS , BOOKNAME , PRICE
FROM STUD_MASTER S , ASSIGN_SUBM ASM , ASSIGNMENT A , BOOKISSUERETUIRN BI , BOOK B 
WHERE S.ROLLNO = ASM.ROLLNO AND S.ROLLNO = BI.ROLLNO AND ASM.ASSIGNNO = A.ASSIGNNO AND B.BOOKID = BI.BOOKID AND PRICE >= 500 AND SUB_STATUS = 'FALSE' AND SUBJECT = 'RDBMS';

OUTPUT :

	ROLLNO	NAME	SUBJECT	SUB_STATUS	BOOKNAME			PRICE
	-------------------------------------------------------------
	3		TEESA	RDBMS	FALSE		OPERATING SYSTEMS	550
	6		VAIBHAV	RDBMS	FALSE		DATABASE SYSTEMS	500